// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pump2.proto

package pump2

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BuildInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gpu                  bool     `protobuf:"varint,2,opt,name=gpu,proto3" json:"gpu,omitempty"`
	Tf                   bool     `protobuf:"varint,3,opt,name=tf,proto3" json:"tf,omitempty"`
	Torch                bool     `protobuf:"varint,4,opt,name=torch,proto3" json:"torch,omitempty"`
	TfVersion            string   `protobuf:"bytes,5,opt,name=tfVersion,proto3" json:"tfVersion,omitempty"`
	TorchVersion         string   `protobuf:"bytes,6,opt,name=torchVersion,proto3" json:"torchVersion,omitempty"`
	Dependence           string   `protobuf:"bytes,7,opt,name=dependence,proto3" json:"dependence,omitempty"`
	UseToTest            bool     `protobuf:"varint,8,opt,name=useToTest,proto3" json:"useToTest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildInfo) Reset()         { *m = BuildInfo{} }
func (m *BuildInfo) String() string { return proto.CompactTextString(m) }
func (*BuildInfo) ProtoMessage()    {}
func (*BuildInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_27a2d905ba20eb6d, []int{0}
}

func (m *BuildInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildInfo.Unmarshal(m, b)
}
func (m *BuildInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildInfo.Marshal(b, m, deterministic)
}
func (m *BuildInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildInfo.Merge(m, src)
}
func (m *BuildInfo) XXX_Size() int {
	return xxx_messageInfo_BuildInfo.Size(m)
}
func (m *BuildInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BuildInfo proto.InternalMessageInfo

func (m *BuildInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BuildInfo) GetGpu() bool {
	if m != nil {
		return m.Gpu
	}
	return false
}

func (m *BuildInfo) GetTf() bool {
	if m != nil {
		return m.Tf
	}
	return false
}

func (m *BuildInfo) GetTorch() bool {
	if m != nil {
		return m.Torch
	}
	return false
}

func (m *BuildInfo) GetTfVersion() string {
	if m != nil {
		return m.TfVersion
	}
	return ""
}

func (m *BuildInfo) GetTorchVersion() string {
	if m != nil {
		return m.TorchVersion
	}
	return ""
}

func (m *BuildInfo) GetDependence() string {
	if m != nil {
		return m.Dependence
	}
	return ""
}

func (m *BuildInfo) GetUseToTest() bool {
	if m != nil {
		return m.UseToTest
	}
	return false
}

type BuildResult struct {
	BuildStats           bool     `protobuf:"varint,1,opt,name=buildStats,proto3" json:"buildStats,omitempty"`
	ImageName            string   `protobuf:"bytes,2,opt,name=imageName,proto3" json:"imageName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildResult) Reset()         { *m = BuildResult{} }
func (m *BuildResult) String() string { return proto.CompactTextString(m) }
func (*BuildResult) ProtoMessage()    {}
func (*BuildResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_27a2d905ba20eb6d, []int{1}
}

func (m *BuildResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildResult.Unmarshal(m, b)
}
func (m *BuildResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildResult.Marshal(b, m, deterministic)
}
func (m *BuildResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildResult.Merge(m, src)
}
func (m *BuildResult) XXX_Size() int {
	return xxx_messageInfo_BuildResult.Size(m)
}
func (m *BuildResult) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildResult.DiscardUnknown(m)
}

var xxx_messageInfo_BuildResult proto.InternalMessageInfo

func (m *BuildResult) GetBuildStats() bool {
	if m != nil {
		return m.BuildStats
	}
	return false
}

func (m *BuildResult) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

type NodeInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_27a2d905ba20eb6d, []int{2}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

type NodeStat struct {
	NodeStats            bool     `protobuf:"varint,1,opt,name=nodeStats,proto3" json:"nodeStats,omitempty"`
	NodeHealth           string   `protobuf:"bytes,2,opt,name=nodeHealth,proto3" json:"nodeHealth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStat) Reset()         { *m = NodeStat{} }
func (m *NodeStat) String() string { return proto.CompactTextString(m) }
func (*NodeStat) ProtoMessage()    {}
func (*NodeStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_27a2d905ba20eb6d, []int{3}
}

func (m *NodeStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStat.Unmarshal(m, b)
}
func (m *NodeStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStat.Marshal(b, m, deterministic)
}
func (m *NodeStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStat.Merge(m, src)
}
func (m *NodeStat) XXX_Size() int {
	return xxx_messageInfo_NodeStat.Size(m)
}
func (m *NodeStat) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStat.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStat proto.InternalMessageInfo

func (m *NodeStat) GetNodeStats() bool {
	if m != nil {
		return m.NodeStats
	}
	return false
}

func (m *NodeStat) GetNodeHealth() string {
	if m != nil {
		return m.NodeHealth
	}
	return ""
}

func init() {
	proto.RegisterType((*BuildInfo)(nil), "pump2.BuildInfo")
	proto.RegisterType((*BuildResult)(nil), "pump2.BuildResult")
	proto.RegisterType((*NodeInfo)(nil), "pump2.NodeInfo")
	proto.RegisterType((*NodeStat)(nil), "pump2.NodeStat")
}

func init() { proto.RegisterFile("pump2.proto", fileDescriptor_27a2d905ba20eb6d) }

var fileDescriptor_27a2d905ba20eb6d = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xc1, 0x6a, 0xc2, 0x40,
	0x10, 0x86, 0x4d, 0x34, 0x36, 0x8e, 0xa5, 0x95, 0xa1, 0x87, 0x45, 0x4a, 0x91, 0x3d, 0x79, 0x92,
	0x62, 0xe9, 0x0b, 0xf4, 0xa4, 0x14, 0xa4, 0xa4, 0xd2, 0x7b, 0x34, 0x13, 0x15, 0x34, 0x1b, 0xdc,
	0xdd, 0x67, 0xed, 0xeb, 0x94, 0x99, 0x24, 0x26, 0xbd, 0xcd, 0x7c, 0xfc, 0xfb, 0xcf, 0xcc, 0xfe,
	0x30, 0x2e, 0xfd, 0xa5, 0x5c, 0x2e, 0xca, 0xab, 0x71, 0x06, 0x23, 0x69, 0xf4, 0x6f, 0x00, 0xa3,
	0x0f, 0x7f, 0x3a, 0x67, 0xeb, 0x22, 0x37, 0x88, 0x30, 0x28, 0xd2, 0x0b, 0xa9, 0x60, 0x16, 0xcc,
	0x47, 0x89, 0xd4, 0x38, 0x81, 0xfe, 0xa1, 0xf4, 0x2a, 0x9c, 0x05, 0xf3, 0x38, 0xe1, 0x12, 0x1f,
	0x20, 0x74, 0xb9, 0xea, 0x0b, 0x08, 0x5d, 0x8e, 0x4f, 0x10, 0x39, 0x73, 0xdd, 0x1f, 0xd5, 0x40,
	0x50, 0xd5, 0xe0, 0x33, 0x8c, 0x5c, 0xfe, 0x43, 0x57, 0x7b, 0x32, 0x85, 0x8a, 0xc4, 0xb0, 0x05,
	0xa8, 0xe1, 0x5e, 0x64, 0x8d, 0x60, 0x28, 0x82, 0x7f, 0x0c, 0x5f, 0x00, 0x32, 0x2a, 0xa9, 0xc8,
	0xa8, 0xd8, 0x93, 0xba, 0x13, 0x45, 0x87, 0xf0, 0x04, 0x6f, 0x69, 0x6b, 0xb6, 0x64, 0x9d, 0x8a,
	0x65, 0x76, 0x0b, 0xf4, 0x27, 0x8c, 0xe5, 0xb0, 0x84, 0xac, 0x3f, 0x3b, 0x36, 0xdb, 0x71, 0xfb,
	0xed, 0x52, 0x67, 0xe5, 0xc0, 0x38, 0xe9, 0x10, 0x36, 0x3b, 0x5d, 0xd2, 0x03, 0x6d, 0xf8, 0xfe,
	0xb0, 0x5a, 0xf7, 0x06, 0x34, 0x40, 0xbc, 0x31, 0x19, 0xf1, 0x27, 0xe9, 0x55, 0x55, 0xf3, 0x33,
	0x7e, 0x55, 0xd4, 0x75, 0x63, 0xda, 0x02, 0x9e, 0xc9, 0xcd, 0x8a, 0xd2, 0xb3, 0x3b, 0xd6, 0xa6,
	0x1d, 0xb2, 0x2c, 0x21, 0xfa, 0xe2, 0x14, 0xf0, 0xbd, 0xde, 0x75, 0xcd, 0x03, 0x2d, 0x4e, 0x16,
	0x55, 0x52, 0xb7, 0x60, 0xa6, 0xd8, 0x25, 0xd5, 0x45, 0xba, 0x87, 0xaf, 0x00, 0xcd, 0x26, 0xde,
	0xe2, 0x63, 0xad, 0x69, 0x16, 0x9d, 0x76, 0x01, 0x6b, 0x74, 0x6f, 0x37, 0x94, 0xf0, 0xdf, 0xfe,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x2e, 0xf2, 0x29, 0x0b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Pump2Client is the client API for Pump2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Pump2Client interface {
	BuildImages(ctx context.Context, in *BuildInfo, opts ...grpc.CallOption) (*BuildResult, error)
	NodeStatus(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*NodeStat, error)
}

type pump2Client struct {
	cc *grpc.ClientConn
}

func NewPump2Client(cc *grpc.ClientConn) Pump2Client {
	return &pump2Client{cc}
}

func (c *pump2Client) BuildImages(ctx context.Context, in *BuildInfo, opts ...grpc.CallOption) (*BuildResult, error) {
	out := new(BuildResult)
	err := c.cc.Invoke(ctx, "/pump2.Pump2/BuildImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pump2Client) NodeStatus(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*NodeStat, error) {
	out := new(NodeStat)
	err := c.cc.Invoke(ctx, "/pump2.Pump2/NodeStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Pump2Server is the server API for Pump2 service.
type Pump2Server interface {
	BuildImages(context.Context, *BuildInfo) (*BuildResult, error)
	NodeStatus(context.Context, *NodeInfo) (*NodeStat, error)
}

// UnimplementedPump2Server can be embedded to have forward compatible implementations.
type UnimplementedPump2Server struct {
}

func (*UnimplementedPump2Server) BuildImages(ctx context.Context, req *BuildInfo) (*BuildResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildImages not implemented")
}
func (*UnimplementedPump2Server) NodeStatus(ctx context.Context, req *NodeInfo) (*NodeStat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeStatus not implemented")
}

func RegisterPump2Server(s *grpc.Server, srv Pump2Server) {
	s.RegisterService(&_Pump2_serviceDesc, srv)
}

func _Pump2_BuildImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Pump2Server).BuildImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pump2.Pump2/BuildImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Pump2Server).BuildImages(ctx, req.(*BuildInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pump2_NodeStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Pump2Server).NodeStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pump2.Pump2/NodeStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Pump2Server).NodeStatus(ctx, req.(*NodeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pump2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pump2.Pump2",
	HandlerType: (*Pump2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildImages",
			Handler:    _Pump2_BuildImages_Handler,
		},
		{
			MethodName: "NodeStatus",
			Handler:    _Pump2_NodeStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pump2.proto",
}
